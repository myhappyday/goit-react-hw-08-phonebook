{"version":3,"file":"static/js/242.234f08fc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    return contacts\n      .filter(contact =>\n        contact.name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  color: #333;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.16;\n`;\n\nexport const Name = styled.span`\n  margin-right: 10px;\n  color: #333;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.16;\n`;\n\nexport const Number = styled.span`\n  color: #797c7c;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.16;\n`;\n\nexport const Button = styled.button`\n  width: 60px;\n  padding: 3px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n\n  overflow: hidden;\n  color: #333;\n  background-color: rgb(227, 227, 227);\n  border: 1px solid rgb(193, 193, 193);\n  border-radius: 4px;\n  transition: all 0.45s ease-Out;\n\n  :hover {\n    background-color: rgba(185, 183, 240, 0.8);\n    box-shadow: inset rgba(15, 7, 238, 0.4) 0px 0px 16px 2px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactItem, Name, Number, Button } from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactItem>\n      <p>\n        <Name>{name}:</Name>\n        <Number>{number}</Number>\n      </p>\n      <Button\n        type=\"button\"\n        aria-label=\"Delete\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0 10px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactListItem from '../ContactListItem';\nimport { List } from './ContactList.styled';\nimport Loader from 'components/Loader';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <List>\n        {contacts &&\n          contacts.map(({ id, name, number }) => (\n            <ContactListItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            ></ContactListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  padding: 20px 10px;\n  border: 1px solid #212121;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.16;\n  color: #797c7c;\n  margin-bottom: 15px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus-within {\n    color: #3f51b5\n    // color: rgba(15, 7, 238, 0.8);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 420px;\n  height: 36px;\n  font-size: 16px;\n  line-height: 1.16;\n  // background-color: inherit;\n  color: #3f51b5;\n  margin-top: 8px;\n  padding-left: 12px;\n  border: 1px solid rgb(191, 192, 192);\n  border-radius: 4px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus {\n    outline: transparent;\n    border: 1px solid #3f51b5\n    // box-shadow: rgba(63, 81, 181, 0.8) 0px 0px 3px 1px;\n  }\n\n  :focus + label {\n    color: #3f51b5;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 130px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  overflow: hidden;\n  color: #212121;\n  background-color: rgb(243, 243, 243);\n  border: 1px solid #3f51b5;\n  border-radius: 4px;\n  transition: all 250ms ease-Out;\n\n  :hover {\n    color: white;\n    background-color: #3f51b5\n    // box-shadow: inset rgba(15, 7, 238, 0.4) 0px 0px 16px 2px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const nameInputId = nanoid(5);\n  const phoneInputId = nanoid(5);\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const { name, phone } = event.currentTarget.elements;\n\n    const contact = {\n      id: nanoid(5),\n      name: name.value,\n      phone: phone.value,\n    };\n\n    if (onDuplicateContact(name.value)) {\n      Notiflix.Notify.info(`${name.value} is already in contacts`);\n      event.currentTarget.reset();\n      name.focus();\n      return;\n    }\n\n    dispatch(addContact(contact));\n    event.currentTarget.reset();\n  };\n\n  const onDuplicateContact = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit} autoComplete=\"off\">\n      <Label htmlFor={nameInputId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={nameInputId}\n        />\n      </Label>\n      <Label htmlFor={phoneInputId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={phoneInputId}\n        />\n      </Label>\n      <Button type=\"submit\" aria-label=\"Add contact\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.16;\n  color: #797c7c;\n  margin-bottom: 15px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus-within {\n    color: #3f51b5;\n    // color: rgba(15, 7, 238, 0.8);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 445px;\n  height: 36px;\n  font-size: 16px;\n  line-height: 1.16;\n  // background-color: inherit;\n  color: #3f51b5;\n  margin-top: 8px;\n  padding-left: 12px;\n  border: 1px solid rgb(191, 192, 192);\n  border-radius: 4px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus {\n    outline: transparent;\n    border: 1px solid #3f51b5\n    // box-shadow: rgba(63, 81, 181, 0.8) 0px 0px 3px 1px;\n  }\n\n  :focus + label {\n    color: #3f51b5;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n\n  const onChangeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Label htmlFor=\"filter\">\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filterValue}\n        onChange={onChangeFilter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\nimport React from 'react';\nimport Filter from '../components/Filter';\n\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  width: 460px;\n  margin: 40px auto;\n  padding: 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: rgb(243, 243, 243);\n  border-radius: 4px;\n  font-size: 22px;\n  // box-shadow: rgb(158, 158, 158) 0px 4px 10px 4px;\n`;\n\nconst ContactsPage = () => {\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectFilteredContacts","createSelector","filterValue","contact","name","toLowerCase","includes","sort","a","b","localeCompare","ContactItem","styled","Name","Number","Button","id","number","dispatch","useDispatch","type","onClick","deleteContact","List","useSelector","useEffect","fetchContacts","Loader","map","Form","Label","Input","nameInputId","nanoid","phoneInputId","onDuplicateContact","some","onSubmit","event","preventDefault","currentTarget","elements","phone","value","Notiflix","reset","focus","addContact","autoComplete","htmlFor","pattern","title","required","onChange","setFilter","Container"],"sourceRoot":""}