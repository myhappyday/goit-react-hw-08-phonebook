{"version":3,"file":"static/js/342.54a1c77c.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { BiLogInCircle } from 'react-icons/bi';\n\nimport { createTheme } from '@mui/material/styles';\n\nexport const LoginIcon = styled(BiLogInCircle)`\n  width: 50px;\n  height: 50px;\n  color: #3f51b5;\n`;\n\nexport const InAuth = styled(Link)`\n  color: #90a4ae;\n  transition: all 0.25s ease-Out;\n\n  :hover {\n    color: #607d8b;\n    text-decoration: underline;\n  }\n`;\n\nexport const defaultTheme = createTheme({\n  palette: {\n    primary: {\n      light: 'rgba(63, 81, 181, 0.6)',\n      main: 'rgba(63, 81, 181, 0.8)',\n      dark: 'rgba(63, 81, 181, 1)',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { Alert, AlertTitle, Snackbar } from '@mui/material';\n\nimport { userLogIn } from 'redux/auth/operations';\nimport { selectUserError, selectIsLogged } from 'redux/auth/selectors';\nimport { LoginIcon, InAuth, defaultTheme } from './LoginForm.styled';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(selectIsLogged);\n  const error = useSelector(selectUserError);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get('email');\n    const password = data.get('password');\n\n    if (email === '' || password === '') {\n      setOpenSnackbar(true);\n      return;\n    }\n\n    dispatch(userLogIn({ email, password })).then(\n      ({ meta: { rejectedWithValue } }) => {\n        if (rejectedWithValue) setOpenSnackbar(true);\n      }\n    );\n    event.target.reset();\n  };\n\n  if (authenticated) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"div\" sx={{ height: '700px' }}>\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage:\n              'url(https://source.unsplash.com/random?wallpapers)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <LoginIcon />\n\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <InAuth to=\"/register\">\n                    {\"Don't have an account? Sign Up\"}\n                  </InAuth>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={() => setOpenSnackbar(false)}\n      >\n        {error ? (\n          <Alert severity=\"warning\" onClose={() => setOpenSnackbar(false)}>\n            <AlertTitle>Error</AlertTitle>\n            Sorry, the login or password was entered incorrectly!!\n          </Alert>\n        ) : (\n          <Alert severity=\"warning\" onClose={() => setOpenSnackbar(false)}>\n            <AlertTitle>Warning</AlertTitle>\n            Sorry, field values ​​cannot be empty!\n          </Alert>\n        )}\n      </Snackbar>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport LoginForm from '../components/LoginForm';\n\nconst LoginPage = () => {\n  return <div>\n    <LoginForm />\n  </div>;\n};\n\nexport default LoginPage;\n"],"names":["LoginIcon","styled","BiLogInCircle","InAuth","Link","defaultTheme","createTheme","palette","primary","light","main","dark","contrastText","secondary","LoginPage","dispatch","useDispatch","authenticated","useSelector","selectIsLogged","error","selectUserError","useState","openSnackbar","setOpenSnackbar","to","ThemeProvider","theme","Grid","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","email","get","password","userLogIn","then","meta","rejectedWithValue","target","reset","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","mb","Snackbar","open","autoHideDuration","onClose","Alert","severity","AlertTitle"],"sourceRoot":""}