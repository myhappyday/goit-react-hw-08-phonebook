{"version":3,"file":"static/js/231.d77f2f31.chunk.js","mappings":"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","sources":["components/RegisterForm /RegisterForm.styled.jsx","components/RegisterForm /RegisterForm.jsx","pages/RegisterPage.jsx","redux/auth/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\nimport { GiArchiveRegister } from 'react-icons/gi';\nimport { createTheme } from '@mui/material/styles';\n\nexport const InAuth = styled(Link)`\n  color: #90a4ae;\n  transition: all 0.25s ease-Out;\n\n  :hover {\n    color: #607d8b;\n    text-decoration: underline;\n  }\n`;\n\nexport const AuthIcon = styled(GiArchiveRegister)`\n  width: 50px;\n  height: 50px;\n  color: #ba000d;\n`;\n\nexport const defaultTheme = createTheme({\n  palette: {\n    primary: {\n      light: '#90a4ae',\n      main: '#78909c',\n      dark: '#607d8b',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { ThemeProvider } from '@mui/material/styles';\nimport {\n  Alert,\n  AlertTitle,\n  Checkbox,\n  FormControlLabel,\n  Snackbar,\n} from '@mui/material';\n\nimport { userRegister } from 'redux/auth/operations';\nimport { selectUserError } from 'redux/auth/selectors';\nimport { InAuth, AuthIcon, defaultTheme } from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectUserError);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.userName.value;\n    const email = form.elements.userEmail.value;\n    const password = form.elements.userPassword.value;\n\n    dispatch(\n      userRegister({\n        name,\n        email,\n        password,\n      })\n    );\n\n\n    // const data = new FormData(event.currentTarget);\n\n    // const name = data.get('fullName');\n    // const email = data.get('email');\n    // const password = data.get('password');\n\n    console.log(\"name:\", name);\n    console.log(\"email:\", email);\n    console.log(\"password:\", password);\n\n\n\n    if (name === '' || email === '' || password === '') {\n      setOpenSnackbar(true);\n      return;\n    }\n\n    dispatch(userRegister({ name, email, password })).then(\n      ({ meta: { rejectedWithValue } }) => {\n        if (rejectedWithValue) setOpenSnackbar(true);\n      }\n    );\n    event.target.reset();\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"div\" sx={{ height: '700px' }}>\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage:\n              'url(https://source.unsplash.com/random?wallpapers)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <AuthIcon />\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"fullName\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                margin=\"normal\"\n              />\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"               \n              />\n\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <InAuth to=\"/login\">\n                    {'Already have an account? Sign in'}\n                  </InAuth>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={4000}\n        onClose={() => setOpenSnackbar(false)}\n      >\n        {error ? (\n          <Alert severity=\"warning\" onClose={() => setOpenSnackbar(false)}>\n            <AlertTitle>Error</AlertTitle>\n            Invalid personal data entered. Try the following example:\n            <p>name: </p> <strong>Your name</strong>,<p>email: </p>{' '}\n            <strong>your.email@gmail.com</strong>,<p>password: </p>{' '}\n            <strong>password77</strong>\n          </Alert>\n        ) : (\n          <Alert severity=\"warning\" onClose={() => setOpenSnackbar(false)}>\n            <AlertTitle>Warning</AlertTitle>\n            Sorry, field values ​​cannot be empty!\n          </Alert>\n        )}\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n\nexport default RegisterForm;","import RegisterForm from '../components/RegisterForm ';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return <div><RegisterForm/></div>;\n};\n\nexport default RegisterPage;\n","export const selectUserData = state => state.auth.userData;\nexport const selectToken = state => state.auth.token;\nexport const selectIsLogged = state => state.auth.isLogged;\nexport const selectUserLoading = state => state.auth.isLoading;\nexport const selectUserError = state => state.auth.error;\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n// export const selectUsername = state => state.auth.user.name;\n// export const selectErrorMessage = state => state.auth.error;\n\n// export const selectUserData = state => state.auth.userData;\n// export const selectAuthentificated = state => state.auth.authentificated;\n"],"names":["InAuth","styled","Link","AuthIcon","GiArchiveRegister","defaultTheme","createTheme","palette","primary","light","main","dark","contrastText","secondary","dispatch","useDispatch","error","useSelector","selectUserError","useState","openSnackbar","setOpenSnackbar","ThemeProvider","theme","Grid","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","event","preventDefault","form","currentTarget","name","elements","userName","value","email","userEmail","password","userPassword","userRegister","console","log","then","meta","rejectedWithValue","target","reset","mt","TextField","autoComplete","required","fullWidth","id","label","autoFocus","margin","type","FormControlLabel","control","Checkbox","color","Button","mb","to","Snackbar","open","autoHideDuration","onClose","Alert","severity","AlertTitle","state","auth"],"sourceRoot":""}