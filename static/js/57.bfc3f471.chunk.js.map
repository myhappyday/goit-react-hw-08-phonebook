{"version":3,"file":"static/js/57.bfc3f471.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\nimport { GiArchiveRegister } from 'react-icons/gi';\nimport { createTheme } from '@mui/material/styles';\n\nexport const InAuth = styled(Link)`\n  color: #90a4ae;\n  transition: all 0.25s ease-Out;\n\n  :hover {\n    color: #607d8b;\n    text-decoration: underline;\n  }\n`;\n\nexport const AuthIcon = styled(GiArchiveRegister)`\n  width: 50px;\n  height: 50px;\n  color: #3f51b5;\n`;\n\nexport const defaultTheme = createTheme({\n  palette: {\n    primary: {\n      light: 'rgba(63, 81, 181, 0.6)',\n      main: 'rgba(63, 81, 181, 0.8)',\n      dark: 'rgba(63, 81, 181, 1)',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { Alert, AlertTitle, Snackbar } from '@mui/material';\n\nimport { userRegister } from 'redux/auth/operations';\nimport { selectUserError, selectIsLogged } from 'redux/auth/selectors';\nimport { InAuth, AuthIcon, defaultTheme } from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(selectIsLogged);\n  const error = useSelector(selectUserError);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const data = new FormData(event.currentTarget);\n\n    const name = data.get('fullName');\n    const email = data.get('email');\n    const password = data.get('password');\n\n    if (name === '' || email === '' || password === '') {\n      setOpenSnackbar(true);\n      return;\n    }\n\n    dispatch(userRegister({ name, email, password })).then(\n      ({ meta: { rejectedWithValue } }) => {\n        if (rejectedWithValue) setOpenSnackbar(true);\n      }\n    );\n    event.target.reset();\n  };\n\n  if (authenticated) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"div\" sx={{ height: '700px' }}>\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage:\n              'url(https://source.unsplash.com/random?wallpapers)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <AuthIcon />\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"fullName\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                margin=\"normal\"\n              />\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <InAuth to=\"/login\">\n                    {'Already have an account? Sign in'}\n                  </InAuth>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={4000}\n        onClose={() => setOpenSnackbar(false)}\n      >\n        {error ? (\n          <Alert severity=\"warning\" onClose={() => setOpenSnackbar(false)}>\n            <AlertTitle>Error</AlertTitle>\n            Invalid personal data entered. Try the following example:\n            <p>name: </p> <strong>Your name</strong>,<p>email: </p>{' '}\n            <strong>your.email@gmail.com</strong>,<p>password: </p>{' '}\n            <strong>password77</strong>\n          </Alert>\n        ) : (\n          <Alert severity=\"warning\" onClose={() => setOpenSnackbar(false)}>\n            <AlertTitle>Warning</AlertTitle>\n            Sorry, field values ​​cannot be empty!\n          </Alert>\n        )}\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n\nexport default RegisterForm;\n","// import RegisterForm from '';\nimport RegisterForm from '../components/RegisterForm';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["InAuth","styled","Link","AuthIcon","GiArchiveRegister","defaultTheme","createTheme","palette","primary","light","main","dark","contrastText","secondary","dispatch","useDispatch","authenticated","useSelector","selectIsLogged","error","selectUserError","useState","openSnackbar","setOpenSnackbar","to","ThemeProvider","theme","Grid","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","name","get","email","password","userRegister","then","meta","rejectedWithValue","target","reset","mt","TextField","autoComplete","required","fullWidth","id","label","autoFocus","margin","type","Button","mb","Snackbar","open","autoHideDuration","onClose","Alert","severity","AlertTitle"],"sourceRoot":""}